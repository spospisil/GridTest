@page
@using GridTest.Models

<h2>Sample Grid Project</h2>
<div>
<button type="button" class="btn btn-primary" id="saveBtn">Save</button>

</div>

<form id="TestForm" method="post">
    <div id="gridContainer">
    @(Html.DevExtreme().DataGrid<SecurityGroupProcedureForGridDto>()
        .ID("Permissions")
        .RepaintChangesOnly(true)
        .Editing(editing => {
                    editing.AllowUpdating(true);
                    editing.Mode(GridEditMode.Cell);
            })
        .TwoWayBindingEnabled(true)
        //.KeyExpr("id")
        .Columns(columns => {
            columns.Add()
                .Width("350")
                .Caption("Permission Name")
                .Alignment(HorizontalAlignment.Center)
                .DataField("ShortDescription");
            columns.Add()
                .Width("975")
                .Caption("Setting")
                .Alignment(HorizontalAlignment.Center)
                .DataField("Status")
                .ShowEditorAlways(true)
                .EditCellTemplate(@<text>
                                                @(Html.DevExtreme().RadioGroup()
                        .DataSource(new List<KeyValuePair<bool?, string>>() { 
                            new KeyValuePair<bool?, string>(null, "Not Defined"),
                            new KeyValuePair<bool?, string>(true, "Enabled"),
                            new KeyValuePair<bool?, string>(false, "Disabled"),
                        })
                        .ValueExpr("Key")
                        .DisplayExpr("Value")
                        .Layout(Orientation.Horizontal)
                        .OnValueChanged("function(e) { setValue(e.value); }")
                            .Value(new JS("value"))
                                                )
                                            </text>);
        })
        .ShowBorders(true)
        .ShowColumnHeaders(true)
        .Paging(p => p.PageSize(10))
        )
    </div>
</form>

<script type="text/javascript">
    $(document).ready(function () {

         $(document).on('click', '#saveBtn', function () {
             $('#TestForm').submit();
        });

        $(document).on('submit', '#TestForm', function (e) {
            e.preventDefault();

            //Get the grid's datasource
            var grid = $("#Permissions").dxDataGrid("instance");
            var ds = grid.getDataSource();
            debugger;

            //Write out the selected procedures to the security group
            var apiurl = "https://localhost:7089/Data/SaveData";

                ds.store().load().done(function (data) {
                    $.ajax({
                        url: apiurl,
                        type: "POST",
                        dataType: "json",
                        data: { gridData: JSON.stringify(data) },
                        success: function (result) {
                            console.log('Success');
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            alert('Request Status: ' + xhr.status + '; Status Text: ' + textStatus + '; Error: ' + errorThrown);
                        }
                    });

                });
        });

        console.log('test 1');

        var url = "https://localhost:7089/Data";
                     
        var source = new DevExpress.data.DataSource({
            load: function () {
                return fetch(url)
                    .then(response => response.json());
            },
            loadMode: "raw", // raw loadMode for CustomStore. This will ensure data operations are done in the client side
            key: "Id"
        });

        // assign DataSource instance to datagrid
        $('#Permissions').dxDataGrid("instance").option("dataSource", source);

        // call dataSource's load() method
        source.load();
    });
</script>